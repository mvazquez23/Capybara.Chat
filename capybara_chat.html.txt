<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Capybara Chat Pro</title>
  <style>
    * { box-sizing: border-box; }
    body {
      margin: 0;
      font-family: 'Segoe UI', sans-serif;
      background-color: #f0ece3;
    }
    .screen {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }
    .login-box {
      background: #fff;
      padding: 30px;
      border-radius: 15px;
      box-shadow: 0 0 10px rgba(0,0,0,0.2);
      display: flex;
      flex-direction: column;
      gap: 10px;
      width: 90%;
      max-width: 400px;
    }
    .login-box input, .login-box button {
      padding: 10px;
      border-radius: 10px;
      border: 1px solid #ccc;
    }
    .login-box button {
      background-color: #a67c52;
      color: white;
      border: none;
      cursor: pointer;
    }
    header {
      display: flex;
      align-items: center;
      background-color: #a67c52;
      color: white;
      padding: 10px;
    }
    header img {
      width: 50px;
      height: 50px;
      border-radius: 50%;
      margin-right: 10px;
    }
    main {
      display: flex;
      flex-direction: column;
      height: calc(100vh - 70px);
    }
    #chat-window {
      flex: 1;
      overflow-y: auto;
      padding: 10px;
      background: #fff;
      display: flex;
      flex-direction: column;
    }
    .sent {
      align-self: flex-end;
      background-color: #d1ffd6;
      padding: 10px;
      border-radius: 12px;
      margin: 5px;
      max-width: 70%;
    }
    .received {
      align-self: flex-start;
      background-color: #e0e0e0;
      padding: 10px;
      border-radius: 12px;
      margin: 5px;
      max-width: 70%;
    }
    .input-area {
      display: flex;
      align-items: center;
      padding: 10px;
      background-color: #eee;
      gap: 5px;
    }
    .input-area input {
      flex: 1;
      padding: 10px;
      border-radius: 8px;
      border: 1px solid #ccc;
    }
    .input-area button {
      padding: 10px;
      border-radius: 8px;
      border: none;
      background-color: #a67c52;
      color: white;
      cursor: pointer;
    }
    .tools button {
      margin-left: 5px;
      border: none;
      background-color: #6db079;
      color: white;
      border-radius: 8px;
      padding: 8px;
      cursor: pointer;
    }
    .tool-box {
      padding: 10px;
      background: #fff8dc;
      display: flex;
      flex-direction: column;
      align-items: stretch;
      gap: 10px;
    }
    .tool-box button {
      background-color: #6db079;
      color: white;
      border: none;
      padding: 10px;
      border-radius: 10px;
    }
    .hidden { display: none; }
    @media (max-width: 600px) {
      .input-area { flex-direction: column; }
    }
  </style>
</head>
<body>

  <!-- Pantalla de login -->
  <div id="login-screen" class="screen">
    <div class="login-box">
      <h2>üêæ Capybara Chat</h2>
      <input type="text" id="username" placeholder="Usuario" />
      <input type="password" id="password" placeholder="Contrase√±a" />
      <button onclick="login()">Entrar</button>
    </div>
  </div>

  <!-- Pantalla de chat -->
  <div id="chat-screen" class="screen hidden" style="flex-direction: column;">
    <header>
      <img src="https://placecapybara.com/80" alt="Capibara" />
      <h1>Capybara Chat</h1>
    </header>

    <main>
      <div id="chat-window"></div>
      <div class="input-area">
        <input type="text" id="message-input" placeholder="Escrib√≠ tu mensaje..." />
        <button onclick="sendMessage()">Enviar</button>
        <div class="tools">
          <button onclick="getLocation()">üìç</button>
          <button onclick="toggleNote()">üìù</button>
          <button onclick="toggleDate()">üìÖ</button>
        </div>
      </div>
    </main>

    <div id="note-box" class="tool-box hidden">
      <textarea id="notes" placeholder="Escrib√≠ una nota..."></textarea>
      <button onclick="saveNotes()">Guardar Nota</button>
    </div>

    <div id="date-box" class="tool-box hidden">
      <input type="date" id="important-date" />
      <button onclick="saveDate()">Guardar Fecha</button>
    </div>
  </div>

  <script>
    function login() {
      const user = document.getElementById('username').value;
      const pass = document.getElementById('password').value;
      if (user && pass) {
        localStorage.setItem('capyUser', user);
        localStorage.setItem('capyPass', pass);
        document.getElementById('login-screen').classList.add('hidden');
        document.getElementById('chat-screen').classList.remove('hidden');
        loadStoredData();
      } else {
        alert('Ingres√° usuario y contrase√±a.');
      }
    }

    function sendMessage() {
      const input = document.getElementById('message-input');
      const chatWindow = document.getElementById('chat-window');
      if (input.value.trim() !== '') {
        const msg = document.createElement('div');
        msg.textContent = input.value;
        msg.className = 'sent';
        chatWindow.appendChild(msg);

        const messages = JSON.parse(localStorage.getItem('messages')) || [];
        messages.push({ type: 'sent', content: input.value });
        localStorage.setItem('messages', JSON.stringify(messages));

        input.value = '';
        chatWindow.scrollTop = chatWindow.scrollHeight;
      }
    }

    function getLocation() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(position => {
          const chatWindow = document.getElementById('chat-window');
          const msg = document.createElement('div');
          msg.className = 'received';
          msg.textContent = `üìç Lat: ${position.coords.latitude}, Long: ${position.coords.longitude}`;
          chatWindow.appendChild(msg);

          const messages = JSON.parse(localStorage.getItem('messages')) || [];
          messages.push({ type: 'received', content: msg.textContent });
          localStorage.setItem('messages', JSON.stringify(messages));
        });
      }
    }

    function toggleNote() {
      document.getElementById('note-box').classList.toggle('hidden');
    }

    function toggleDate() {
      document.getElementById('date-box').classList.toggle('hidden');
    }

    function saveNotes() {
      const notes = document.getElementById('notes').value;
      localStorage.setItem('notes', notes);
      alert("Nota guardada ‚úÖ");
    }

    function saveDate() {
      const date = document.getElementById('important-date').value;
      localStorage.setItem('importantDate', date);
      alert("Fecha importante guardada üìÖ");
    }

    function loadStoredData() {
      const messages = JSON.parse(localStorage.getItem('messages')) || [];
      const chatWindow = document.getElementById('chat-window');
      messages.forEach(msg => {
        const div = document.createElement('div');
        div.className = msg.type;
        div.textContent = msg.content;
        chatWindow.appendChild(div);
      });

      document.getElementById('notes').value = localStorage.getItem('notes') || '';
      document.getElementById('important-date').value = localStorage.getItem('importantDate') || '';
    }
  </script>

</body>
</html>
